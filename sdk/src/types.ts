// Central SDK shared TypeScript types

export interface HealthResult {
  message: string;
}

export interface Location {
  longitude: number;
  latitude: number;
}

export interface RouteReference {
  origin: string;
  destination: string;
  transportVehicleId: string;
}

export enum IncidentType {
  ISSUES = 'ISSUES',
  DELAY = 'DELAY',
  SEVERE_BLOCKER = 'SEVERE_BLOCKER'
}

export enum ReporterType {
  USER = 'USER',
  DISPATCHER = 'DISPATCHER',
  EXTERNAL_SYSTEM = 'EXTERNAL_SYSTEM'
}

export interface Reporter {
  id: string;
  type: ReporterType;
}

export interface IncidentReportDetails {
  reportedOnRoute: RouteReference | null;
}

// Simplified request - location, reporter, and details are inferred from user context
export interface CreateIncidentRequest {
  userId: string;
  incidentType: IncidentType;
  description?: string;
}

export interface IncidentReport {
  id: string; // Generated by the repository
  location: Location; // Inferred from user's current location
  reporter: Reporter; // Inferred from userId
  incidentType: IncidentType;
  details: IncidentReportDetails; // Inferred from user's active journey
  timestamp: Date;
  description?: string;
}
